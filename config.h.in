/* -*- Mode: C; tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil -*- */
#ifndef CONFIG_H
#define CONFIG_H 1

#include <platform/platform.h>
#include <event.h>

#cmakedefine HAVE_MEMALIGN ${HAVE_MEMALIGN}
#cmakedefine HAVE_LIBNUMA ${HAVE_LIBNUMA}
#cmakedefine HAVE_PKCS5_PBKDF2_HMAC 1
#cmakedefine HAVE_PKCS5_PBKDF2_HMAC_SHA1 1
#cmakedefine HAVE_SSL_OP_NO_TLSv1_1 1

#ifndef HAVE_SSL_OP_NO_TLSv1_1
/*
 * Some of our platforms use an old version of OpenSSL without
 * support for anything newer than TLSv1
 */
#define SSL_OP_NO_TLSv1_1 0L
#endif

#define COUCHBASE_MAX_NUM_BUCKETS 100

#ifdef WIN32
#include <winsock2.h>
#include <ws2tcpip.h>
#include <windows.h>
#include <io.h>

#ifndef F_OK
#define F_OK 0
#endif

#define PATH_MAX 1024

/* @todo investigate this one.. */

#define SOCKETPAIR_AF AF_INET
#define get_socket_error() WSAGetLastError()

typedef int in_port_t;
typedef int sa_family_t;
typedef HANDLE pid_t;

#define snprintf _snprintf
#define strtoull(a, b, c) _strtoui64(a, b, c)
#define strtoll(a, b, c) _strtoi64(a, b, c)
/* to stop the stupid compiler to whine about this.. */
#ifndef __cplusplus
#define putenv(a) _putenv(a)
#endif

#define EX_OSERR EXIT_FAILURE
#define EX_USAGE EXIT_FAILURE

#else

#if !defined(__cplusplus) && !defined(linux) && !defined(__GNUC__)
typedef unsigned long long uint64_t;
typedef long long int64_t;
#endif

#define closesocket(a) close(a)
typedef int SOCKET;
#define SOCKETPAIR_AF AF_UNIX
#define SOCKET_ERROR -1
#define INVALID_SOCKET -1
#define get_socket_error() errno

/* need this to get IOV_MAX on some platforms. */
#ifndef __need_IOV_MAX
#define __need_IOV_MAX
#endif

#ifndef _POSIX_PTHREAD_SEMANTICS
#define _POSIX_PTHREAD_SEMANTICS
#endif

#ifdef __sun
#include <priv.h>
#define HAVE_DROP_PRIVILEGES 1
#endif

#define HAVE_SIGIGNORE 1


#include <sys/wait.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/un.h>
#include <sys/resource.h>
#include <sys/uio.h>
#include <netinet/tcp.h>
#include <arpa/inet.h>
#include <sys/mman.h>
#include <sys/time.h>
#include <signal.h>
#include <sysexits.h>


#endif

/* Common section */
#include <stdlib.h>
#include <inttypes.h>
#include <sys/types.h>

#ifndef __cplusplus
#include <stdbool.h>
#endif

#ifndef IOV_MAX
# define IOV_MAX 1024
#endif
#define SASL_ENABLED

#define MEMCACHED_VERSION "${MEMCACHED_VERSION}"
#define PRODUCT_VERSION "${PRODUCT_VERSION}"
#define DESTINATION_ROOT "${CMAKE_INSTALL_PREFIX}"

/* We don't use assert() for two main reasons:
 * 1) It's disabled on non-debug builds, which we don't want.
 * 2) cb_assert() prints extra info (backtraces).
 */
#undef assert
#define assert #error "assert() is forbidden. Use cb_assert() from <platform/cbassert.h instead."

/*
 * Using the ntoh-methods on thread sanitizer builder cause compile warnings
 * due to the macros is using the "register" keyword. Just undefine the
 * macros since we don't need the extra performance optimization during the
 * thread sanitizer run.
 */
#ifdef THREAD_SANITIZER
#undef ntohs
#undef ntohl
#undef htons
#undef htonl
#endif

#endif //CONFIG_H
